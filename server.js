const WebSocket = require('ws');
const express = require('express');
const cors = require('cors');
const app = express();
app.use(cors());
const PORT = process.env.PORT || 5000;

let currentData = {
  "phien_truoc": null,
  "ket_qua": "",
  "Dice": [],
  "phien_hien_tai": null,
  "du_doan": "",
  "do_tin_cay": "",
  "cau": "",
  "ngay": "",
  "Id": "Nhutquangvip - @nhutquangdz ü™º"
};

let id_phien_chua_co_kq = null;
let history = []; // S·ª≠ d·ª•ng m·∫£ng ƒë·ªëi t∆∞·ª£ng thay v√¨ chu·ªói

// ---

// === Bi·∫øn l∆∞u tr·∫°ng th√°i cho thu·∫≠t to√°n ===
// L∆∞u d√£y T/X g·∫ßn nh·∫•t (l√™n ƒë·∫øn 200 phi√™n). ƒê√¢y l√† l·ªãch s·ª≠ k·∫øt qu·∫£ T√†i/X·ªâu.
let patternHistory = []; 
// L∆∞u l·ªãch s·ª≠ c√°c m·∫∑t x√∫c x·∫Øc chi ti·∫øt (d1, d2, d3).
let diceHistory = []; 

// === Thu·∫≠t to√°n d·ª± ƒëo√°n n√¢ng cao ===
/**
 * Ph√¢n t√≠ch l·ªãch s·ª≠ k·∫øt qu·∫£ T√†i/X·ªâu v√† ƒë∆∞a ra d·ª± ƒëo√°n cho phi√™n ti·∫øp theo.
 * @param {Array<string>} history M·∫£ng ch·ª©a l·ªãch s·ª≠ c√°c k·∫øt qu·∫£ 'T' (T√†i) ho·∫∑c 'X' (X·ªâu).
 * @returns {object} ƒê·ªëi t∆∞·ª£ng ch·ª©a th√¥ng tin ph√¢n t√≠ch, d·ª± ƒëo√°n cu·ªëi c√πng v√† ƒë·ªô tin c·∫≠y.
 */
function analyzeAndPredict(history) {
  const analysis = {
    totalResults: history.length, // T·ªïng s·ªë k·∫øt qu·∫£ trong l·ªãch s·ª≠
    taiCount: history.filter(r => r === 'T').length, // S·ªë l·∫ßn T√†i
    xiuCount: history.filter(r => r === 'X').length, // S·ªë l·∫ßn X·ªâu
    last50Pattern: history.slice(-50).join(''), // Chu·ªói 50 k·∫øt qu·∫£ g·∫ßn nh·∫•t
    last200Pattern: history.join(''), // Chu·ªói 200 k·∫øt qu·∫£ g·∫ßn nh·∫•t (ho·∫∑c t·∫•t c·∫£ n·∫øu √≠t h∆°n 200)
    predictionDetails: [] // Chi ti·∫øt v·ªÅ c√°c ph√¢n t√≠ch d·∫´n ƒë·∫øn d·ª± ƒëo√°n
  };

  let prediction = "?"; // D·ª± ƒëo√°n m·∫∑c ƒë·ªãnh l√† kh√¥ng x√°c ƒë·ªãnh
  let confidence = 0; // ƒê·ªô tin c·∫≠y c·ªßa d·ª± ƒëo√°n, t·ª´ 0 ƒë·∫øn 1

  // Chi·∫øn l∆∞·ª£c 1: Ph√¢n t√≠ch c·∫ßu l·∫∑p (trong 50 phi√™n g·∫ßn nh·∫•t)
  // T√¨m ki·∫øm c√°c m·∫´u c·∫ßu ph·ªï bi·∫øn nh∆∞ c·∫ßu b·ªát, c·∫ßu 1-1, c·∫ßu 2-1, 2-2.
  const recentHistory = history.slice(-50); // L·∫•y 50 phi√™n g·∫ßn nh·∫•t ƒë·ªÉ ph√¢n t√≠ch c·∫ßu
  const patternsToCheck = [
    { name: "C·∫ßu B·ªát T√†i", pattern: "TTTT", predict: "T" },
    { name: "C·∫ßu B·ªát X·ªâu", pattern: "XXXX", predict: "X" },
    { name: "C·∫ßu 1-1 (T)", pattern: "XTXTXTX", predict: "T" }, // ƒêang b·ªát 1-1 v√† k·∫øt th√∫c b·∫±ng X, d·ª± ƒëo√°n T
    { name: "C·∫ßu 1-1 (X)", pattern: "TXTXTXT", predict: "X" }, // ƒêang b·ªát 1-1 v√† k·∫øt th√∫c b·∫±ng T, d·ª± ƒëo√°n X
    { name: "C·∫ßu 2-1 (TX)", pattern: "TTXT", predict: "X" }, // V√≠ d·ª•: TTX T -> d·ª± ƒëo√°n X
    { name: "C·∫ßu 2-1 (XT)", pattern: "XXTX", predict: "T" }, // V√≠ d·ª•: XXT X -> d·ª± ƒëo√°n T
    { name: "C·∫ßu 2-2 (TX)", pattern: "TTXXTT", predict: "X" }, // V√≠ d·ª•: TTXXTT -> d·ª± ƒëo√°n X
    { name: "C·∫ßu 2-2 (XT)", pattern: "XXTTXX", predict: "T" }, // V√≠ d·ª•: XXTTXX -> d·ª± ƒëo√°n T
  ];

  for (const p of patternsToCheck) {
    if (recentHistory.join('').endsWith(p.pattern)) {
      prediction = p.predict;
      confidence += 0.4; // TƒÉng ƒë·ªô tin c·∫≠y ƒë√°ng k·ªÉ n·∫øu ph√°t hi·ªán c·∫ßu r√µ r√†ng
      analysis.predictionDetails.push(`Ph√°t hi·ªán: ${p.name}, D·ª± ƒëo√°n: ${p.predict}`);
      break; // ∆Øu ti√™n m·∫´u c·∫ßu g·∫ßn nh·∫•t v√† r√µ r√†ng nh·∫•t
    }
  }

  // Chi·∫øn l∆∞·ª£c 2: Ph√¢n t√≠ch xu h∆∞·ªõng (trong 20 phi√™n g·∫ßn nh·∫•t)
  // X√°c ƒë·ªãnh xu h∆∞·ªõng chung (T√†i nhi·ªÅu h∆°n hay X·ªâu nhi·ªÅu h∆°n) trong c√°c phi√™n g·∫ßn ƒë√¢y.
  const last20 = history.slice(-20);
  const taiIn20 = last20.filter(r => r === 'T').length;
  const xiuIn20 = last20.filter(r => r === 'X').length;

  if (taiIn20 > xiuIn20 + 5) { // N·∫øu T√†i nhi·ªÅu h∆°n ƒë√°ng k·ªÉ (v√≠ d·ª•: h∆°n 5 l·∫ßn)
    if (prediction === "T") confidence += 0.2; // TƒÉng th√™m ƒë·ªô tin c·∫≠y n·∫øu tr√πng kh·ªõp v·ªõi d·ª± ƒëo√°n tr∆∞·ªõc
    else if (prediction === "?") { prediction = "T"; confidence += 0.2; } // N·∫øu ch∆∞a c√≥ d·ª± ƒëo√°n, d·ª± ƒëo√°n T√†i
    analysis.predictionDetails.push(`Xu h∆∞·ªõng 20 phi√™n: Nghi√™ng v·ªÅ T√†i (${taiIn20} T√†i / ${xiuIn20} X·ªâu)`);
  } else if (xiuIn20 > taiIn20 + 5) { // N·∫øu X·ªâu nhi·ªÅu h∆°n ƒë√°ng k·ªÉ
    if (prediction === "X") confidence += 0.2;
    else if (prediction === "?") { prediction = "X"; confidence += 0.2; }
    analysis.predictionDetails.push(`Xu h∆∞·ªõng 20 phi√™n: Nghi√™ng v·ªÅ X·ªâu (${taiIn20} T√†i / ${xiuIn20} X·ªâu)`);
  } else if (prediction === "?") {
      analysis.predictionDetails.push(`Xu h∆∞·ªõng 20 phi√™n: Kh√° c√¢n b·∫±ng (${taiIn20} T√†i / ${xiuIn20} X·ªâu)`);
  }


  // Chi·∫øn l∆∞·ª£c 3: D·ª± ƒëo√°n d·ª±a tr√™n c√°c m·∫∑t x√∫c x·∫Øc v√† t·ªïng ƒëi·ªÉm (C·∫ßn d·ªØ li·ªáu diceHistory)
  // Ph·∫ßn n√†y c√≥ th·ªÉ ƒë∆∞·ª£c m·ªü r·ªông ƒë·ªÉ ph√¢n t√≠ch s√¢u h∆°n v·ªÅ t·∫ßn su·∫•t c√°c m·∫∑t x√∫c x·∫Øc ho·∫∑c t·ªïng ƒëi·ªÉm.
  if (diceHistory.length > 0) {
    const lastResult = diceHistory[diceHistory.length -1];
    const total = lastResult.d1 + lastResult.d2 + lastResult.d3;
    analysis.predictionDetails.push(`K·∫øt qu·∫£ x√∫c x·∫Øc g·∫ßn nh·∫•t: ${lastResult.d1}-${lastResult.d2}-${lastResult.d3} (T·ªïng: ${total})`);
    // V√≠ d·ª• v·ªÅ ph√¢n t√≠ch x√∫c x·∫Øc:
    // C√≥ th·ªÉ th√™m logic ·ªü ƒë√¢y ƒë·ªÉ d·ª± ƒëo√°n d·ª±a tr√™n c√°c m·∫∑t x√∫c x·∫Øc c·ª• th·ªÉ.
    // V√≠ d·ª•: n·∫øu trong 10 phi√™n g·∫ßn nh·∫•t c√≥ nhi·ªÅu l·∫ßn ra 3 m·∫∑t gi·ªëng nhau (b·ªô ba),
    // ho·∫∑c t·ªïng ƒëi·ªÉm th∆∞·ªùng xuy√™n n·∫±m trong m·ªôt kho·∫£ng nh·∫•t ƒë·ªãnh.
    // ƒêi·ªÅu n√†y y√™u c·∫ßu th·ªëng k√™ t·∫ßn su·∫•t xu·∫•t hi·ªán c·ªßa t·ªïng ƒëi·ªÉm ho·∫∑c c√°c m·∫∑t c·ª• th·ªÉ.
  }


  // N·∫øu ch∆∞a c√≥ d·ª± ƒëo√°n r√µ r√†ng t·ª´ c√°c chi·∫øn l∆∞·ª£c tr√™n, quay l·∫°i d·ª± ƒëo√°n d·ª±a tr√™n l·∫∑p l·∫°i ƒë∆°n gi·∫£n h∆°n.
  if (prediction === "?" && history.length >= 6) { // C·∫ßn √≠t nh·∫•t 6 phi√™n ƒë·ªÉ t√¨m m·∫´u 3 ho·∫∑c 4
    const last3 = history.slice(-3).join(''); // 3 k·∫øt qu·∫£ cu·ªëi
    const last4 = history.slice(-4).join(''); // 4 k·∫øt qu·∫£ cu·ªëi

    // ƒê·∫øm s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa chu·ªói 3 ho·∫∑c 4 k·∫øt qu·∫£ cu·ªëi trong to√†n b·ªô l·ªãch s·ª≠.
    // N·∫øu n√≥ l·∫∑p l·∫°i nhi·ªÅu l·∫ßn, c√≥ th·ªÉ d·ª± ƒëo√°n ti·∫øp theo s·∫Ω l√† k√Ω t·ª± ƒë·∫ßu ti√™n c·ªßa chu·ªói ƒë√≥.
    const count3 = history.join('').split(last3).length - 1;
    if (count3 >= 2 && last3.length === 3) { // ƒê·∫£m b·∫£o chu·ªói ƒë·ªß d√†i v√† l·∫∑p √≠t nh·∫•t 2 l·∫ßn
      prediction = last3[0]; // D·ª± ƒëo√°n k√Ω t·ª± ƒë·∫ßu ti√™n c·ªßa m·∫´u l·∫∑p
      confidence += 0.1;
      analysis.predictionDetails.push(`Ph√°t hi·ªán l·∫∑p 3 cu·ªëi: ${last3}, D·ª± ƒëo√°n: ${prediction}`);
    }

    const count4 = history.join('').split(last4).length - 1;
    if (count4 >= 2 && last4.length === 4) { // ƒê·∫£m b·∫£o chu·ªói ƒë·ªß d√†i v√† l·∫∑p √≠t nh·∫•t 2 l·∫ßn
      prediction = last4[0];
      confidence += 0.1;
      analysis.predictionDetails.push(`Ph√°t hi·ªán l·∫∑p 4 cu·ªëi: ${last4}, D·ª± ƒëo√°n: ${prediction}`);
    }
  }

  // ƒêi·ªÅu ch·ªânh tr·ªçng s·ªë/ƒë·ªô tin c·∫≠y (T·ª± h·ªçc h·ªèi - C·∫ßn l∆∞u tr·ªØ k·∫øt qu·∫£ d·ª± ƒëo√°n v√† k·∫øt qu·∫£ th·ª±c t·∫ø)
  // ƒê√¢y l√† ph·∫ßn ph·ª©c t·∫°p v√† ƒë√≤i h·ªèi l∆∞u tr·ªØ d·ªØ li·ªáu d·ª± ƒëo√°n-th·ª±c t·∫ø ƒë·ªÉ "hu·∫•n luy·ªán" thu·∫≠t to√°n.
  // V√≠ d·ª•: N·∫øu d·ª± ƒëo√°n "T" v√† k·∫øt qu·∫£ th·ª±c t·∫ø l√† "T", tƒÉng tr·ªçng s·ªë cho chi·∫øn l∆∞·ª£c ƒë√£ ƒë∆∞a ra d·ª± ƒëo√°n ƒë√≥.
  // N·∫øu d·ª± ƒëo√°n "T" v√† k·∫øt qu·∫£ th·ª±c t·∫ø l√† "X", gi·∫£m tr·ªçng s·ªë.
  // Hi·ªán t·∫°i, ch·ªâ tƒÉng confidence n·∫øu c√≥ c√°c m·∫´u r√µ r√†ng ƒë∆∞·ª£c ph√°t hi·ªán.
  // ƒê·ªÉ tri·ªÉn khai t·ª± h·ªçc h·ªèi, b·∫°n s·∫Ω c·∫ßn m·ªôt c∆° ch·∫ø l∆∞u tr·ªØ (v√≠ d·ª•: file JSON, c∆° s·ªü d·ªØ li·ªáu nh·ªè)
  // ƒë·ªÉ theo d√µi hi·ªáu su·∫•t c·ªßa t·ª´ng chi·∫øn l∆∞·ª£c theo th·ªùi gian.

  analysis.finalPrediction = prediction;
  analysis.confidence = Math.min(confidence, 1); // ƒê·∫£m b·∫£o ƒë·ªô tin c·∫≠y kh√¥ng v∆∞·ª£t qu√° 100%

  return analysis;
}

// ---

// ================== K·∫æT N·ªêI V√Ä X·ª¨ L√ù D·ªÆ LI·ªÜU =====================

const messagesToSend = [
  [1, "MiniGame", "SC_thataoduocko112233", "112233", {
    "info": "{\"ipAddress\":\"2402:800:62cd:ef90:a445:40de:a24a:765e\",\"userId\":\"1a46e9cd-135d-4f29-9cd5-0b61bd2fb2a9\",\"username\":\"SC_thataoduocko112233\",\"timestamp\":1752257356729,\"refreshToken\":\"fe70e712cf3c4737a4ae22cbb3700c8e.f413950acf984ed6b373906f83a4f796\"}",
    "signature": "16916AC7F4F163CD00B319824B5B90FFE11BC5E7D232D58E7594C47E271A5CDE0492BB1C3F3FF20171B3A344BEFEAA5C4E9D28800CF18880FEA6AC3770016F2841FA847063B80AF8C8A747A689546CE75E99A7B559612BC30FBA5FED9288B69013C099FD6349ABC2646D5ECC2D5B2A1C5A9817FE5587844B41C752D0A0F6F304"
  }],
  [6, "MiniGame", "taixiuPlugin", { cmd: 1005 }],
  [6, "MiniGame", "lobbyPlugin", { cmd: 10001 }]
];

function connectWebSocket() {
  const ws = new WebSocket("wss://websocket.azhkthg1.net/websocket?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhbW91bnQiOjAsInVzZXJuYW1lIjoiU0NfYXBpc3Vud2luMTIzIn0.hgrRbSV6vnBwJMg9ZFtbx3rRu9mX_hZMZ_m5gMNhkw0", {
    headers: {
      "User-Agent": "Mozilla/5.0",
      "Origin": "https://play.sun.win"
    }
  });

  ws.on('open', () => {
    console.log('[LOG] WebSocket k·∫øt n·ªëi');
    messagesToSend.forEach((msg, i) => {
      setTimeout(() => {
        if (ws.readyState === WebSocket.OPEN) {
          ws.send(JSON.stringify(msg));
        }
      }, i * 600);
    });

    setInterval(() => {
      if (ws.readyState === WebSocket.OPEN) {
        ws.ping();
      }
    }, 15000);
  });

  ws.on('pong', () => console.log('[LOG] Ping OK'));

  ws.on('message', (message) => {
    try {
      const data = JSON.parse(message);
      if (Array.isArray(data) && typeof data[1] === 'object') {
        const cmd = data[1].cmd;

        if (cmd === 1008 && data[1].sid) {
          id_phien_chua_co_kq = data[1].sid;
        }

        if (cmd === 1003 && data[1].gBB) {
          const { d1, d2, d3 } = data[1];
          const total = d1 + d2 + d3;
          const result = total > 10 ? "T" : "X"; // Thay ƒë·ªïi "T√†i" -> "T", "X·ªâu" -> "X" ƒë·ªÉ ph√π h·ª£p thu·∫≠t to√°n

          // C·∫≠p nh·∫≠t l·ªãch s·ª≠ cho thu·∫≠t to√°n d·ª± ƒëo√°n
          patternHistory.push(result);
          if (patternHistory.length > 200) { // Gi·ªõi h·∫°n l·ªãch s·ª≠ 200 phi√™n
            patternHistory.shift();
          }
          diceHistory.push({ d1, d2, d3, total });
          if (diceHistory.length > 200) { // Gi·ªõi h·∫°n l·ªãch s·ª≠ 200 phi√™n
            diceHistory.shift();
          }

          // G·ªçi thu·∫≠t to√°n d·ª± ƒëo√°n
          const predictionResult = analyzeAndPredict(patternHistory);

          currentData = {
            phien_truoc: id_phien_chua_co_kq,
            ket_qua: (result === "T" ? "T√†i" : "X·ªâu"), // Chuy·ªÉn l·∫°i "T" -> "T√†i", "X" -> "X·ªâu" cho ƒë·∫ßu ra
            Dice: [d1, d2, d3],
            phien_hien_tai: id_phien_chua_co_kq + 1,
            du_doan: (predictionResult.finalPrediction === "T" ? "T√†i" : (predictionResult.finalPrediction === "X" ? "X·ªâu" : predictionResult.finalPrediction)),
            do_tin_cay: `${(predictionResult.confidence * 100).toFixed(2)}%`,
            cau: predictionResult.predictionDetails.join('; '), // G·∫Øn chi ti·∫øt ph√¢n t√≠ch v√†o ƒë√¢y
            ngay: new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" }),
            Id: "@ghetvietcode - Rinkivana"
          };
          
          console.log(`[LOG] Phi√™n ${id_phien_chua_co_kq} ‚Üí ${d1}-${d2}-${d3} = ${total} (${(result === "T" ? "T√†i" : "X·ªâu")}) | D·ª± ƒëo√°n: ${currentData.du_doan} (${currentData.do_tin_cay}) - Chi ti·∫øt: ${currentData.cau}`);
          id_phien_chua_co_kq = null;
        }
      }
    } catch (err) {
      console.error('[ERROR] L·ªói x·ª≠ l√Ω d·ªØ li·ªáu:', err.message);
    }
  });

  ws.on('close', () => {
    console.log('[WARN] WebSocket m·∫•t k·∫øt n·ªëi. ƒêang th·ª≠ l·∫°i sau 2s...');
    setTimeout(connectWebSocket, 2500);
  });

  ws.on('error', (err) => {
    console.error('[ERROR] WebSocket l·ªói:', err.message);
  });
}

app.get('/taixiu', (req, res) => res.json(currentData));

app.get('/', (req, res) => {
  res.send(`<h2>Sunwin T√†i X·ªâu API</h2><p><a href="/taixiu">Xem k·∫øt qu·∫£ JSON</a></p>`);
});

app.listen(PORT, () => {
  console.log(`[LOG] Server ƒëang ch·∫°y t·∫°i http://localhost:${PORT}`);
  connectWebSocket();
});
